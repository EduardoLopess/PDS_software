.container-vendaScreen {
    background-color: #F5F5F5;
    width: 97vw;
    height: 82vh;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.5);
    display: flex;
}

.container-carrinhoVenda {
    width: 100%;
    height: 100%;
    
}

.container-esquerda-vendaScreen {
    width: 50%;
    height: 100%;
    display: flex;
    align-items: center;
    flex-direction: column;

}

.container-direita-vendaScreen {
    width: 50%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.container-conteudo-direita {
    margin: 1rem;
    height: 90%; /* A altura total disponível para esta seção */
    width: 95%;
    border-radius: 15px;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    background-color: white;
    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.5);
    /* Remova position: relative; se você não tiver outros elementos absolutizados que dependam disso
       e preferir que .container-btn-conteudo-direita não seja absolute.
       No entanto, se mantiver o container-btn-conteudo-direita como absolute, mantenha o relative aqui.
       Vou manter 'relative' para o container-btn-conteudo-direita se comportar como antes. */
    position: relative; /* Mantenha se o container-btn-conteudo-direita for absolute */

    /* **MUITO IMPORTANTE AQUI:** */
    display: flex;
    flex-direction: column; /* Organiza os filhos em coluna: Carrinho e depois os Botões */
    /* Remova justify-content: space-between; se você tinha. */
    /* O espaço será gerenciado pela altura do CarrinhoVenda e dos botões */
}

/* O container dos botões de ação na parte inferior da tela de venda */
.container-btn-conteudo-direita {
    width: 100%;
    height: 3.5rem; /* **Altura fixa dos botões de ação** */
    /* Já que você quer eles por cima, eles NÃO PODEM ser position: absolute aqui.
       Eles devem fazer parte do fluxo do Flexbox. */
    /* REMOVA: position: absolute; */
    /* REMOVA: bottom: 0; */
    /* REMOVA: left: 0; */
    display: flex; /* Mantenha display: flex */
    justify-content: space-between;
    background-color: white; /* Garante que os botões tenham um fundo */
    box-shadow: 0px -2px 5px rgba(0,0,0,0.1); /* Sutil sombra para dar profundidade */
    z-index: 20; /* Certifique-se de que ele esteja acima de qualquer coisa que possa vazar */

    /* Adicione margin-top para um pequeno espaçamento entre o carrinho e os botões, se desejar */
    /* margin-top: 0.5rem; */
}

/* O contêiner onde o componente CarrinhoVenda é renderizado */
.container-carrinhoVenda {
    width: 100%;
    /* Remova height: 100%; que estava aqui antes. */
    background-color: transparent; /* A cor de fundo será definida dentro do CarrinhoVenda-wrapper */
    display: flex;
    flex-direction: column;
    /* REMOVA position: relative; daqui se o totalItem-carrinhoVenda estiver DENTRO do componente CarrinhoVenda */

    /* **NOVO:** Faça o container do carrinho ocupar todo o espaço restante */
    flex-grow: 1; /* Permite que ele cresça e ocupe o espaço restante na coluna */

    /* Remova quaisquer paddings ou margens que você adicionou aqui antes */
    /* padding-bottom: 7rem; <-- REMOVER */
    /* margin-bottom: 3.5rem; <-- REMOVER */

    /* O overflow e as barras de rolagem NÃO FICAM AQUI, mas sim DENTRO do componente CarrinhoVenda */
    /* overflow-y: auto; <-- REMOVER */
    /* scrollbar-width: thin; <-- REMOVER */
    /* etc. <-- REMOVER */
}

.container-btn-categorias-vendaScreen {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: flex-start;
    gap: 1rem;
    height: 30vh;
    padding: 2rem;
}

.container-btn-conteudo-direita {
    width: 100%;
    height: 3.5rem;
    position: absolute;
    bottom: 0;
    left: 0;
    transition: background-color 0.2s ease, transform 0.05s ease;
    justify-content: space-between;
    display: flex;
}


.btn-direita {
    width: 100%;
    cursor: pointer;
    color: white;
    font-weight: bold;
    border: none;
}

.btn-direita:hover {
    background-color: #0056b3;
}

.btn-direita:active {
    background-color: #003f7f;
    transform: scale(0.98);
}


.linha {
    width: 1px;
    background-color: #ccc;
    height: 100%;

}

.container-titulo-carrinho {
    width: 100%;
    height: 3rem;

    display: flex;
    justify-content: center;
    align-items: center;
}


.container-conteudoBtn-vendaScreen {
   background-color: white;
    width: 95%;
    height: 50vh; /* Esta altura fixa é crucial para que o scroll funcione */
    border-radius: 20px;
    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.5);
    overflow-y: auto; 
    scrollbar-width: thin; /* Para Firefox: torna a barra de rolagem fina */
    scrollbar-color: rgba(128, 128, 128, 0.3) transparent; /* Para Firefox: cor do 'thumb' e 'track' */
    
}
.container-titulo-conteudoBtn {
    width: 100%;
}

.container-itens-categoria-vendaScreen {
    width: 100%;
}

.container-carrinhoVenda {
    width: 100%;
    /* REMOVA height: 100%; */
    /* height: 100%; */ /* <-- Remova esta linha */
    background-color: white;
    display: flex;
    /* REMOVA position: relative; se ele não precisar de filhos absolutizados diretamente dentro dele */
    position: relative; /* Mantenha se o total do carrinho ainda é absolute dentro de container-carrinhoVenda */
    flex-direction: column;
    overflow-y: auto; /* Mantenha o scroll aqui para os ITENS do carrinho */
    scrollbar-width: thin;
    scrollbar-color: rgba(128, 128, 128, 0.3) transparent;

    /* ADICIONE ESTA PROPRIEDADE PARA FAZER O CARRINHO OCUPAR O ESPAÇO DISPONÍVEL */
    flex-grow: 1; /* Permite que o carrinho cresça e ocupe o espaço disponível */
    margin-bottom: 3.5rem; /* OU use padding-bottom para criar espaço para os botões fixos */
    /* Uma alternativa a margin-bottom é definir o bottom do totalItem-carrinhoVenda com a altura dos botões */
    /* OU podemos ajustar o container-carrinhoVenda para não sobrepor o container-btn-conteudo-direita */
}




/* Venda-Screen-Style.css */

/* Mantenha todos os seus estilos anteriores exatamente como estão, sem modificação,
   exceto para estas duas classes: */
.container-btn-conteudo-direita {
    width: 100%;
    height: 3.5rem;
    position: absolute; /* Mantenha como está */
    bottom: 0; /* Mantenha como está */
    left: 0; /* Mantenha como está */
    transition: background-color 0.2s ease, transform 0.05s ease;
    justify-content: space-between;
    display: flex; /* Mantenha flex para seus botões internos */

    position: relative; /* CRUCIAL para o posicionamento absoluto dos botões expandidos */
    z-index: 100; /* Alto o suficiente para estar acima de outros elementos */
}

/* 2. Modifique os estilos para o container dos botões que vão expandir para cima */
.expanded-buttons-container {
    position: absolute;
    bottom: calc(100% + 5px); /* Espaçamento acima do botão "MAIS" */
    /* ***** MUDANÇA AQUI: Alinhe à direita ***** */
    right: 0; /* Alinha à direita do .container-btn-conteudo-direita */
    /* Remova 'left: 0;' */
    
    width: auto; /* Permite que a largura se ajuste ao conteúdo, se for um grupo pequeno de botões */
    min-width: 150px; /* Largura mínima para os botões expandidos */
    /* Ou use uma largura fixa se preferir: width: 150px; */

    display: flex;
    flex-direction: column; /* Empilha os botões em coluna */
    /* ***** MUDANÇA AQUI: Alinha os itens flex à direita ***** */
    align-items: flex-end; /* Alinha os botões individuais à direita dentro deste container */
    
    gap: 5px;
    padding: 5px;
    background-color: white;
    box-shadow: 0px -2px 5px rgba(0,0,0,0.1);
    border-radius: 8px;

    /* Para a animação */
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
    transition: opacity 0.3s ease-out, transform 0.3s ease-out, visibility 0.3s ease-out;
    z-index: 99; /* Um pouco menor que o .container-btn-conteudo-direita */
}

/* Quando visível, aplicar a animação */
.container-btn-conteudo-direita .expanded-buttons-container {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
}


.expanded-button {
    
    width: 100%; 
    padding: 8px 12px;
    border-radius: 6px;
    border: none;
    color: white;
    font-size: 0.9em;
    font-weight: bold;
    cursor: pointer;
    transition: background 0.3s ease;
}

.expanded-button:hover {
    filter: brightness(0.9);
}

.expanded-button:active {
    filter: brightness(0.8);
    transform: scale(0.98);
}